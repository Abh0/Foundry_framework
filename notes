Q. locators => id, name, xpath, tagname, cssselector, linktext , partial linktext, class
Q. Assert in testng => Assert is like verification , we can check the Actual and expected things are match or not.
                       => We are using hard assert and soft Assert.
  HArd Assertion: test has stop after session has fail . it will stop immiditely .
  In hard assertion : Assert.assertTrue()
                        Assert.assertFalse()
                            Assert.assertEquls()
  Soft Assertion: test or session has stop and fail  then it will proceed rest of the statement.
  Q. Annotation in testng => 
  @Test		
       @Beforemethod @Aftermethod
       @Beforeclass @Afterclass
       @BeforeTest  @AfterTest
       @BeforeSuite @AfterSuite
       
       ============================================================================
  Q. without using sendkeys enter name in text field 
  
  => 1. Is there a way to type in a textbox without using sendKeys()?
you can use Javascript Executer to input text into a text box without using sendKeys() method:
// Initialize JS object
JavascriptExecutor JS = (JavascriptExecutor)webdriver;
// Enter username
JS.executeScript("document.getElementById('User').value='Abha_Rathour'");
// Enter password
JS.executeScript("document.getElementById('Password').value='password123'");



=====================================================================================
Q. 2. How to select a value from a dropdown in Selenium WebDriver?
Select select = new Select(driver.findElement(By.id("abcd")));
select.selectByVisibleText()/deselectByVisibleText(); - selects/deselects an option by its displayed text
select.selectByValue()/deselectByValue(); - selects/deselects an option by the value of its "value" attribute
select.selectByIndex()/deselectByIndex(); - selects/deselects an option by its index
select.isMultiple(); - returns TRUE if the drop-down element allows multiple selection at a time; FALSE if
otherwise
select.deselectAll(); - deselects all previously selected options

=====================================================================================
Q 5. How to set browser window size in Selenium?
Selenium WebDriver allows resizing and maximizing window natively from its API. We use 'Dimension' class to
resize the window.
WebDriver driver = new FirefoxDriver();
driver.navigate().to("http://google.co.in");
System.out.println(driver.manage().window().getSize());
Dimension d = new Dimension(420,600);
//Resize the current window to the given dimension
driver.manage().window().setSize(d);

======================================================================
Q 6. When do we use findElement() and findElements()?
findElement():
syntax: WebElement elementName = driver.findElement(By.LocatorStrategy("LocatorValue"));
Returns the first most web element if there are multiple web elements found with the same locator
Throws exception NoSuchElementException if there are no elements matching the locator strategy
It will only find one web element
Indexing is not Applicable
findElements();
syntax: List<WebElement> elementName = driver.findElements(By.LocatorStrategy("LocatorValue"));
Returns a list of web elements
Returns an empty list if there are no web elements matching the locator strategy
It will find a collection of elements whose match the locator strategy.
Each Web element is indexed with a number starting from 0 just like an array


=================================================================================
Q. 10. How to login to any site if it is showing an Authentication Pop-Up for Username and Password?
Approach 1: Handling Authentication/Login Popup Window using Selenium WebDriver
By passing user credentials in URL. Its simple, append your username and password with the URL.
e.g., http://Username:Password@SiteURL
http://rajkumar:myPassword@www.softwaretestingmaterial.com
here, Username is rajkumar
Password is myPassword
SiteURL is www.softwaretestingmaterial.com
Sample code:
String URL = "http://" + rajkumar + ":" + myPassword + "@" + www.softwaretestingmaterial.com;
driver.get(URL);
Alert alert = driver.switchTo().alert();
alert.accept();
Approach 2: Handling Authentication/Login Popup Window using Selenium WebDriver
By using AutoIt, we could handle authentication pop up.
Sample AutoIT Script:
WinWaitActivate("Authentication Required","")
Send("rajkumar{TAB}myPassword{ENTER}")
Sample Java Code:
public static void login(String email, String password) throws Exception{
driver.get(URL);
//Passing the AutoIt Script here
Runtime.getRuntime().exec("D:\\Selenium\\workspace\\AutoItFiles\\ExecutableFiles\\FirefoxBrowser.exe");
driver.findElement
loginpage.setEmail(email);
loginpage.setPassword(password);
loginpage.clickOnLogin();
}
Approach 3: Handling Authentication/Login Popup Window using Selenium WebDriver
By using Alerts in Selenium, we could handle authentication pop up.
driver.switchTo().alert();
//Selenium-WebDriver Java Code for entering Username & Password as below:
driver.findElement(By.id("userID")).sendKeys("userName");
driver.findElement(By.id("password")).sendKeys("myPassword");
driver.switchTo().alert().accept();
driver.switchTo().defaultContent();
}
=================================================================================

Q. 10) What are the verification points available in Selenium?
Different types of verification points in Selenium are:

To check element is present

if(driver.findElements(By.Xpath(“value”)).size()!=0){
System.out.println(“Element is present”);
}else{
System.out.println(“Element is absent”);
}
To check element is visible

if(driver.findElement(By.Id(“submit”)).isDisplayed()){
System.out.println(“Element is visible”);
}else{
System.out.println(“Element is visible”);
}
To check element is enabled

if(driver.findElement(By.Id(“submit”)).isEnabled()){
System.out.println(“Element is enabled”);
}else{
System.out.println(“Element is disabled”);
}
To check text is present

if(driver.getPageSource().contains(“Text”)){
System.out.println(“Text is present”);
}else{
System.out.println(“Text is not present”);
}
=======================================================================================
Q. 13) How to login into any site if it is showing an authentication pop-up for
Username and Password?
To work with Basic Authentication pop-up (which is a browser dialogue
window), you just need to send the user name and password along with the
application URL.

Syntax:
driver.get("http://admin:admin@yoururl.com");
=====================================================================================
Q. is a Firefox driver is a class or an interface?
=> firefox is a java class and its implement the webdriver interface. (learne Dynamic polymorphism)
     Chromedriver : java class
     Webdriver : is the Interface (WebDriver is an interface in Java.)
     driver : driver is the object or interface reference variable name
     
 =====================================================================================    
Q. What is super interface of webdriver?
=> SearchContext   
=====================================================================================
Q.   what if we write : Chromedriver driver= new Chromedriver(); instead of Webdriver driver = new Chromedriver();
=>  chatGPT Answer :
If you write chromedriver driver = new Chromedriver(); instead of WebDriver driver = new ChromeDriver();,
     you would encounter a compilation error in Java.

Here's why:
Case Sensitivity: In Java, class and interface names are case-sensitive. The correct class name is "ChromeDriver" with a capital "C," and the correct interface name is "WebDriver" with a capital "W."
Data Types: When declaring variables, the variable name should come after the data type. In your incorrect statement, you're trying to use "chromedriver" and "Chromedriver" as data types, which is not valid.
To create a new instance of the ChromeDriver class and assign it to a WebDriver variable, you should use the correct capitalization and data types, like this:
WebDriver driver = new ChromeDriver();
This statement correctly declares a variable named "driver" of type "WebDriver" and initializes it with a new instance of the "ChromeDriver" class.
=====================================================================================================================
Q. Why we get StaleElemenException? (what is HTML Dom)
=> It occurs when an element on a web page becomes "stale" or no longer valid while an operation is being performed on it.
=====================================================================================================================
Q. staic and dynamic waits in selenium 
=> Static wait are eg. : Threat.sleep(3000);
    Dynamic wait Statement are : 
   1. Implicit wait :
  2.   explicit wait:
   3.  fluent waits :
   4.  PageLoadTimeOut: 
=====================================================================================================================
Q. Difference between  driver.get("URL"); and driver.navigate().to("URL");
=>  driver.get("URL");  is more efficient and it will wait till whole page load.
    driver.navigate().to("URL");   page not fully loaded.

=====================================================================================================================

Q. forward backward and refresh 
=> driver,navigate().forward();   driver,navigate().backward();  driver,navigate().Refresh();

=====================================================================================================================
Q.differenced between  getWindowHandle();  and getWindowHandles();

=====================================================================================================================
Q. driver.close(); => its closed the current webdriver instance window 
 driver.quite(); => All browser will be closed at a time
 =====================================================================================================================
 Q. driver.findelement(); => only single webelement and
  driver.FindElements(by.xpath("xpath here"));  => four button single element list (interact multiple link (a html tag)or button )
  And return type of FindElements is List oject 
  List<WebElement> list = driver.findElements(By.xpath("xpath here"))
  

  
  =====================================================================================================================
  
  Q. isSelected() isEnabled() isDisplay()   ?
  
  =====================================================================================================================
  Q. how to capture screenshot in selenium ?
  => takeScreenshot interface   
  
  
  =====================================================================================================================
  Q. mouse hover using Actions class 
       
  =>   Actions ac = new Actions(driver)
      ac.MovetoElement("xpath").build().perform();
  =====================================================================================================================
  Q. How can we handle web-based popup?
  => windowHandler Api 
  =====================================================================================================================
  Q. How to handle hidden element?
  => javaScriptExecutor(driver).executeScripts("document.getElementByClassName(Elementlocator).click()");
  =====================================================================================================================
  Q. How to run selenium webdriver test from command line?
  => 	cd c
        c: javac A.java
        c: java A.java
        
  =====================================================================================================================
  Q. how to handle Frame ? switch on frame
  =====================================================================================================================
  Q. how to connect with database
  =====================================================================================================================
  Q. Resize browser window?
  => Dimension class available
     Dimension d = new Dimension(480,620);
     driver.manage().window().setSize(d);
  =====================================================================================================================
  Q. How to scroll up and down?
  => public static void scrollPageDown(WebDriver driver){
    	JavascriptExecutor js = ((JavascriptExecutor) driver);
    	js.executeScript("window.scrollTo(0,document.body.scrollHeight)");
    }
  =====================================================================================================================
  Q. How to perform Right click Action
  =>  using Actions class
       Actions action = new Actions(driver);
       action.contextClick(driver.findElement(By.xpath("xpath here")).build().perform());
       action.doubleClick().build().perform());
  =====================================================================================================================
  Q. Drag and drop 	
  =====================================================================================================================
  Q. how to handle checkboxes?      practice url : https://testautomationpractice.blogspot.com/
  =>
  =====================================================================================================================
  Q. how can we launch browser ?
    tradition way:
  Approch 1: system.setProperty("webdriver.chrome.driver, "path of driver\\chromedriver.exe");
  
  Using WebdriverManager : 
      step : add dependencies in POm.xml class
      
         WebDriverManager.firefox().setup();
      WebDriverManager.chromedriver().setup();    // only singke statement , no need to download driver in local.
      Webdeiver driver= new chromedriver();       // directly we setup using method
  
  =====================================================================================================================
  Q. how to open URl ?
   driver.get("www.google.com")   launch the URL 
  =====================================================================================================================
  Q. getTitle ?   Q. getCurrentUrl  ?  Q. driver.getPageSource();  ?
  Ans => get title of the webpage
  =====================================================================================================================
  Q. how to check webElement display, enable?
  Ans => isDisplay() and isEnable
  =====================================================================================================================
  
  =====================================================================================================================
  
  =====================================================================================================================
  
  
  
   =====================================================================================================================
  
  
  
   =====================================================================================================================
  
  
  
  
  
   =====================================================================================================================
  
  
  
  
   =====================================================================================================================
  
  
  
   =====================================================================================================================
  
  
   =====================================================================================================================
  
  
   =====================================================================================================================
  
  
   =====================================================================================================================
  
 






